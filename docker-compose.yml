version: "3"

services:
  # Core Services

  ## the api service allows http access to topaz
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    depends_on:
      - redis
      - migrate
      - ipfs
    ports:
      - "${API_PORT}:8080"
    environment:
      API_JWT_KEY:          "${API_JWT_KEY}"
      ETHEREUM_HOST:        "${ETHEREUM_HOST}"
      GETH_HOST:            "${GETH_HOST}"
      GETH_PRIVATE_KEY:     "${GETH_PRIVATE_KEY}"
      IPFS_HOST:            "${IPFS_HOST}"
      IPFS_PORT:            "${IPFS_PORT}"
      PQ_HOST:              "${PQ_HOST}"
      PQ_NAME:              "${PQ_NAME}"
      PQ_PORT:              "${PQ_PORT}"
      PQ_USER:              "${PQ_USER}"
      REDIS_HOST:           "${REDIS_HOST}"
      REDIS_PORT:           "${REDIS_PORT}"
      REDIS_PASSWORD:       "${REDIS_PASSWORD}"
      STARTUP_SLEEP:        "${STARTUP_SLEEP}"
      TOKEN_DURATION_HOURS: "${TOKEN_DURATION_HOURS}"
      TOKEN_EXPIRE_OFFSET:  "${TOKEN_EXPIRE_OFFSET}"

  ## the batcher service triggers flushes
  batcher:
    build:
      context: .
      dockerfile: ./api/batcher/Dockerfile
    depends_on:
      - postgres
    environment:
      DISPATCH_RATE: "${DISPATCH_RATE}"
      PQ_HOST:       "${PQ_HOST}"
      PQ_NAME:       "${PQ_NAME}"
      PQ_PORT:       "${PQ_PORT}"
      PQ_USER:       "${PQ_USER}"
      STARTUP_SLEEP: "${STARTUP_SLEEP}"

  ## the migrate service manages database migrations
  migrate:
    build: ./migrate
    depends_on:
      - postgres
    environment:
      PQ_HOST:       "${PQ_HOST}"
      PQ_NAME:       "${PQ_NAME}"
      PQ_PORT:       "${PQ_PORT}"
      PQ_USER:       "${PQ_USER}"
      STARTUP_SLEEP: "${STARTUP_SLEEP}"

  # Supporting Services

  ## a redis store used to track blacklisted or expired JWTs
  redis:
    image: 'redis:5.0-alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - 'redis:/data'

  ## the ipfs service provides dedication access to ipfs
  ipfs:
    image: ipfs/go-ipfs:v0.4.17
    ports:
      - "${IPFS_PORT}:5001"
      - "4001:4001"
    volumes:
      - "./ipfs/data:/data/ipfs"
      - "./ipfs/staging:/export"

  ## the postgres service contains the topaz database
  postgres:
    build: ./postgres
    ports:
      - "${PQ_PORT}:5432"

volumes:
  redis:
