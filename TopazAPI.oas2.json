{
    "swagger": "2.0",
    "info": {
        "title": "Topaz API",
        "version": "0.1.16",
        "contact": {
            "name": "Topaz",
            "url": "https://topaz.io",
            "email": "hello@topaz.io"
        },
        "description": "## Topaz API Spec\n\nTo get up and running with Topaz API as quickly as possible, read through these docs.\n\n### Prerequisites\n\nCreate an account at [https://topaz.io](https://topaz.io), log in, and generate an API Token.\n\nYou'll need an API Token to create a new app, create objects, create hashes, and view proofs.\n\nAll API requests should be prefixed with `/v1`, indicating that you're targeting version 1 of our API.\n\n### Guarantee\n\nTopaz API follows Semantic Versioning (https://semver.org), so expect that any breaking changes will be versioned under a new route prefix."
    },
    "paths": {
        "/apps": {
            "get": {
                "summary": "List Apps",
                "operationId": "findApps",
                "responses": {
                    "200": {
                        "description": "An array of all `app` objects belonging to the user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "93e8d456-c195-de31-0ad0-41d704c2ccd7",
                                    "userId": "32eb8a3d-ba12-6cca-07be-a3fb92073355",
                                    "name": "dolo",
                                    "interval": 90949208
                                },
                                {
                                    "id": "9ac5380d-0b49-51a0-1995-aabb5f9d8579",
                                    "userId": "17004a87-86e3-5d55-69f9-689657f96e75",
                                    "name": "anim eu sint incididunt",
                                    "interval": 68254023
                                },
                                {
                                    "id": "6170397f-2951-63b6-5881-3f70ef651312",
                                    "userId": "4ef1bd48-9901-1bb9-08a2-9fdd0d5c5fbd",
                                    "name": "sunt ",
                                    "interval": 2159934
                                },
                                {
                                    "id": "90bf35ac-7862-bee5-4910-0f41bcbf2725",
                                    "userId": "c7bed21-6edf-1dc9-d0e5-54d948981c72",
                                    "name": "vel",
                                    "interval": 44006348
                                },
                                {
                                    "id": "6d92edb3-da70-9a40-b30e-821df74f9d1e",
                                    "userId": "74b42123-7e8a-a933-f3f4-e2841a9b9354",
                                    "name": "non",
                                    "interval": 26495669
                                }
                            ]
                        }
                    }
                },
                "description": "List all `apps` belonging to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ]
            },
            "post": {
                "summary": "Create App",
                "operationId": "createApp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/app-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "ex eu enim ipsum",
                                "interval": 9328408
                            }
                        },
                        "description": "Send in `name` and `interval` to generate an `app` with a blockchain transaction resolution no less than the defined `interval` in seconds."
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/app-output-detailed"
                        },
                        "description": "Returns the full `app` object, including `UUID` generated `id`, and the `userId` associated with this `app`.",
                        "examples": {
                            "application/json": {
                                "id": "6ba55b0c-aaa1-91ae-9c9e-fea0b9c220ff",
                                "userId": "9a27cf48-c09d-01af-eb7c-34f9444c69d3",
                                "name": "Excepteu",
                                "interval": 9328408
                            }
                        }
                    }
                },
                "description": "To create a new `app`, post to the `/apps` endpoint. You'll need to name the `app`, and pass in an `interval`, in seconds. This interval represents the amount of time between blockchain transactions that will occur as you're adding `hashes` to `objects` in this `app`.\n\nIn effect, it's the \"resolution\" at which you're comfortable proving that your data exists.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ]
            }
        },
        "/apps/{appId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get App",
                "operationId": "getApp",
                "responses": {
                    "200": {
                        "description": "Returns details about a single `app`.",
                        "schema": {
                            "$ref": "#/definitions/app-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "id": "09192c37-0b5a-0081-2ef9-1acafb8d6735",
                                "userId": "85e67f55-41ef-8bf9-e73d-2eecc84bdcaf",
                                "name": "ad et consectetur quis mollit",
                                "interval": 47376422
                            }
                        }
                    }
                },
                "description": "This endpoint will return details about a single `app`, given the `appId` passed in as the request parameter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "appId",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "/apps/{appId}/objects": {
            "get": {
                "summary": "List Objects",
                "operationId": "findObjects",
                "responses": {
                    "200": {
                        "description": "Returns an array of `objects`.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "appId": "19b730e0-0d8e-6f90-f588-c75cee1a87ef",
                                    "id": "cff2da16-0bd4-aa3b-4a87-dcfdf32dd233"
                                },
                                {
                                    "appId": "19b730e0-0d8e-6f90-f588-c75cee1a87ef",
                                    "id": "07b1ce3f-cfaf-692c-02e3-6d955efb26c3"
                                }
                            ]
                        }
                    }
                },
                "description": "This endpoint will return all `objects` registered for an `app`.",
                "parameters": [],
                "tags": [
                    "objects"
                ],
                "produces": [
                    "application/json"
                ]
            },
            "post": {
                "summary": "Create Object",
                "operationId": "createObject",
                "responses": {
                    "201": {
                        "description": "The response includes a new `id` for the `object`, along with the `appId` that it belongs to.",
                        "schema": {
                            "$ref": "#/definitions/object-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "appId": "46038ab0-c0d5-8030-4fcd-60e205f4c95f",
                                "id": "9bf2bc66-6e48-98f8-3051-b26855c45ca2"
                            }
                        }
                    }
                },
                "description": "Creating a new `object` doesn't take any body data in its request.",
                "tags": [
                    "objects"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            },
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/apps/{appId}/objects/{objectId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "objectId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Object",
                "operationId": "getObject",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/object-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "appId": "1cab655b-a515-36d9-1cae-d123001c0f4b",
                                "id": "5ac153a3-4e44-2952-e7a8-6ab7434283af",
                                "hashes": [
                                    {
                                        "id": "350e995-f7a6-384d-293b-53fad81c3d28",
                                        "hash": "4fbB5Dc98cd75Ee35Bc85CA6FfAA337AeFCb4d37Ab9f1249eAfe0b49eACc4685"
                                    },
                                    {
                                        "id": "147e6e96-c8ea-22f5-1db5-666140129830",
                                        "hash": "5c8CB9ffDdC0AD09ED1B3a7c7bDB80BC2BEC26aa2aBb23b08c3F70FC3A1dD153"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "objects"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return details about a single object, given the `objectId` passed in as the request parameter"
            }
        },
        "/apps/{appId}/objects/{objectId}/hashes": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "objectId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "List Hashes",
                "operationId": "findHashes",
                "responses": {
                    "200": {
                        "description": "Returns an array of `hash` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/hash-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "hash": "D385cd4aBF18cB633AD6FAa12304D9bA6C4C57ec42DaeDB63e67C0CedfCbFc7D",
                                    "id": "164ba85d-024e-47d0-33a8-176c3ad5f6b3",
                                    "objectId": "3b219075-8365-bc98-33d0-d1f128cc6e75",
                                    "unixTimestamp": 91575573,
                                    "proofId": "47cfc8de-77cd-deaf-8db7-1ecabc6863c6"
                                },
                                {
                                    "hash": "eB14fADB75c70aD4cBa78E9Bb2faC22CeCD8b6BB8a5Ce8e389a3a737498EECAc",
                                    "id": "cbbe39e8-f009-5fa2-4845-210dc846f415",
                                    "objectId": "3b219075-8365-bc98-33d0-d1f128cc6e75",
                                    "unixTimestamp": 76947557,
                                    "proofId": "5fb7d70b-934f-0197-a80d-f78795278320"
                                },
                                {
                                    "hash": "aD6DeFe3dBDfcbfbFC93DB215ba49b2fe8bf40fac8CEB6e7a88754821D4d1C8B",
                                    "id": "1bd39f9d-c1f1-e65f-0103-6be9a74b6c2a",
                                    "objectId": "3b219075-8365-bc98-33d0-d1f128cc6e75",
                                    "unixTimestamp": 81325725,
                                    "proofId": "3be55d00-0c6a-7fa8-3f31-aecf631b3f00"
                                }
                            ]
                        }
                    }
                },
                "tags": [
                    "hashes"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return all `hashes` which have been associated with an `object`"
            },
            "post": {
                "summary": "Create Hash",
                "operationId": "createHash",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/hash-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "hash": "17935945caC3Eaf15A5FD81A10FabdF8292CD42778ceaAdefE78B71deaE7bBeD"
                            }
                        },
                        "description": "Pass in a single `hash` string to create a hash"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notice how the `proofId` is null. It will become populated during the next time that this app's `interval` ticks over, and a blockchain transaction is created.",
                        "schema": {
                            "$ref": "#/definitions/hash-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "hash": "122BDe97cF962b48a2ca0d3eAB1C5ad2D45be61268975E057BB0CfAA2289E7D0",
                                "id": "bb994339-e393-d33d-aab9-af3c427d15ee",
                                "objectId": "urn:uuid:f291dba1-6705-66de-77d7-f9b7dd48b7fa",
                                "unixTimestamp": 30158611,
                                "proofId": null
                            }
                        }
                    }
                },
                "tags": [
                    "hashes"
                ],
                "description": "This endpoint inputs a json object in it's body which defines a `hash` property. This `hash` should be a hex-encoded SHA256 hash.\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/apps/{appId}/objects/{objectId}/hashes/{hashId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "objectId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "hashId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Hash",
                "operationId": "getHash",
                "responses": {
                    "200": {
                        "description": "See how the `proofId` is now populated. This means that a proof has been created and stamped into the blockchain. Congratulations, your data is now provable for all of eternity!",
                        "schema": {
                            "$ref": "#/definitions/hash-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "hash": "bDED3C0be8CE5a0FC8CFbFE4b3538dBcd8F5BC323A26CBedeaD4Dc8B4fAF2385",
                                "id": "11d7c71c-10ba-d867-ba9f-da257cf2d5b8",
                                "objectId": "48f2774d-4ce5-976c-c88f-b444999b7368",
                                "unixTimestamp": 1550610197,
                                "proofId": "a02350b3-46c5-25ad-7640-8d1540a9f6bd"
                            }
                        }
                    }
                },
                "tags": [
                    "hashes"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return details about a single hash, given the `hashId` passed in as the request parameter"
            }
        },
        "/apps/{appId}/proofs": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "List Proofs",
                "operationId": "findProofs",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/proof-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "02a0719f-e09b-f87f-0c28-22d86449e5c6",
                                    "merkleRoot": "QmTjapHMBQbRSzunKKT4iJZwHBxkuQG8bQcShJ8xypuscB",
                                    "ethTransaction": "0x504d5563a12ad9a49ef657d26e97b44ef955cb827843697fbb3001ec28821038",
                                    "unixTimestamp": 99848909,
                                    "appId": "a38c6577-4639-faa7-d62d-ec64281ace3e"
                                },
                                {
                                    "id": "a40461b7-e89a-65f0-df72-0a913646fff7",
                                    "merkleRoot": "QmTuC11Uj8xULk2ieszHyrGhhdwHLyKWM6SxTZLseRwUZm",
                                    "ethTransaction": "0x68f33a9d8a14bb13c321b6eeb9e1e70710bde5b96e1ce2cd287c776d876b87e2",
                                    "unixTimestamp": 35635572,
                                    "appId": "a38c6577-4639-faa7-d62d-ec64281ace3e"
                                },
                                {
                                    "id": "ff9e4af0-d138-13a9-5c9a-6637d3b2ed62",
                                    "merkleRoot": "Qmd4ApDZVM7r4tbFwx5ZtbzsCbLQoV3wh3eqpXGkJSaRW4",
                                    "ethTransaction": "0x08b2af84a471d5b0600ffa9998fa49399722a536566ba5d429c31e88a6b4bee8",
                                    "unixTimestamp": 41471206,
                                    "appId": "a38c6577-4639-faa7-d62d-ec64281ace3e"
                                },
                                {
                                    "id": "344cca83-a1de-f19a-758f-c3691aaf8068",
                                    "merkleRoot": "QmQKSk1rzhqQ23SiAy15ueg3G3u9YqGok3cnTwygyA5AVs",
                                    "ethTransaction": "0xb3c4fd0d48155d99cc5d2bf4eb80ce3d2a35a9c4b6949109a87aa1c4905143f9",
                                    "unixTimestamp": 27598480,
                                    "appId": "a38c6577-4639-faa7-d62d-ec64281ace3e"
                                },
                                {
                                    "id": "64769610-161f-7a4c-a5a4-af09a564f86f",
                                    "merkleRoot": "QmTjapHMBQbRSzunKKT4iJZwHBxkuQG8bQcShJ8xypuscB",
                                    "ethTransaction": "0xe3cad0f60e731ce504e2a8efa8f09a2945bff60e1293e4d9b13302d3ce8c9355",
                                    "unixTimestamp": 93372085,
                                    "appId": "a38c6577-4639-faa7-d62d-ec64281ace3e"
                                }
                            ]
                        }
                    }
                },
                "description": "This endpoint will return all `proofs` associated with an `app`.",
                "tags": [
                    "proofs"
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/apps/{appId}/proofs/{proofsId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "proofsId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Proof",
                "operationId": "getProofs",
                "responses": {
                    "200": {
                        "description": "A proof has a `merkleRoot`, and an `ethTransaction`. These two pieces of data allow you to confirm that your data is secured in the blockchain.\n\nWe combine all hashes sent to Topaz for a given app during an `interval` timeframe, create a Merkel Tree out of those hashes, compute the root hash (`merkleRoot`), craft an Ethereum transaction using that `merkleRoot` as input data, and broadcast that transaction to be mined into a block, solidifying it's existence into an untamperable data structure.",
                        "schema": {
                            "$ref": "#/definitions/proof-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "id": "fc13687b-2603-fe2b-3ca8-93aa4881cb7c",
                                "merkleRoot": "QmfPubEf1HMqfYV7NhPBrz61BSpE6oY7Jwc8ivb2XCTEAw",
                                "ethTransaction": "0xe3cad0f60e731ce504e2a8efa8f09a2945bff60e1293e4d9b13302d3ce8c9355",
                                "unixTimestamp": 1551724423,
                                "appId": "fa7e09db-4c9c-4902-ccd9-4bc906c4bdef",
                                "hashes": {
                                    "id": "2136a5a8-db34-1efb-5b02-be65fb1fbb84",
                                    "hash": "4Eff6Bc64feDa8C36B0C1Aa828cafeB6a0CcEF7c34780b15F6EbDd9db5cb5856"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "proofs"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return details about a single proof, given the `proofId` passed in as the request parameter."
            }
        }
    },
    "schemes": [
        "https"
    ],
    "basePath": "/v1",
    "securityDefinitions": {
        "API Key": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization",
            "description": "Topaz API uses a standard Bearer Token Authorization header for authorization. The header's `key` must be the word `Authorization`, and the `value` may start with `Bearer ` (case insentivie, mind the space, followed by the actual token), but that `Bearer` prefix is not required."
        }
    },
    "definitions": {
        "app-common": {
            "title": "App Common",
            "description": "The properties that are shared amongst all versions of the App model.",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer",
                    "minimum": 30
                }
            },
            "required": [
                "name",
                "interval"
            ]
        },
        "app-input": {
            "title": "App Input",
            "description": "The properties that are allowed when creating or updating an App.",
            "allOf": [
                {
                    "$ref": "#/definitions/app-common"
                },
                {
                    "type": "object"
                }
            ]
        },
        "app-output": {
            "title": "App Output",
            "description": "The properties that are included when fetching a list of Apps.",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "userId": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "id",
                        "userId"
                    ]
                },
                {
                    "$ref": "#/definitions/app-common"
                }
            ]
        },
        "app-output-detailed": {
            "title": "App Output Detailed",
            "description": "The properties that are included when fetching a single Object.",
            "allOf": [
                {
                    "$ref": "#/definitions/app-output"
                }
            ]
        },
        "object-common": {
            "title": "Object Common",
            "description": "The properties that are shared amongst all versions of the Object model.",
            "type": "object",
            "properties": {}
        },
        "object-input": {
            "title": "Object Input",
            "description": "The properties that are allowed when creating or updating a Object.",
            "allOf": [
                {
                    "$ref": "#/definitions/object-common"
                },
                {
                    "type": "object",
                    "properties": {}
                }
            ]
        },
        "object-output": {
            "title": "Object Output",
            "description": "The properties that are included when fetching a list of Objects.",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "appId": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "appId",
                        "id"
                    ]
                },
                {
                    "$ref": "#/definitions/object-common"
                }
            ]
        },
        "object-output-detailed": {
            "title": "Object Output Detailed",
            "description": "The properties that are included when fetching a single Object.",
            "allOf": [
                {
                    "$ref": "#/definitions/object-output"
                },
                {
                    "$ref": "#/definitions/hash-stub-output"
                }
            ]
        },
        "hash-common": {
            "title": "Hash Common",
            "description": "The properties that are shared amongst all versions of the Hash model.",
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string",
                    "pattern": "[A-Fa-f0-9]{64}"
                }
            },
            "required": [
                "hash"
            ]
        },
        "hash-input": {
            "title": "Hash Input",
            "description": "The properties that are allowed when creating or updating a Hash.",
            "allOf": [
                {
                    "$ref": "#/definitions/hash-common"
                },
                {
                    "type": "object"
                }
            ]
        },
        "hash-output": {
            "title": "Hash Output",
            "description": "The properties that are included when fetching a list of Hashes.",
            "allOf": [
                {
                    "$ref": "#/definitions/hash-common"
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "unixTimestamp": {
                            "type": "integer"
                        },
                        "objectId": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "proofId": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "id",
                        "unixTimestamp",
                        "objectId"
                    ]
                }
            ]
        },
        "hash-output-detailed": {
            "title": "Hash Output Detailed",
            "description": "The properties that are included when fetching a single Hash.",
            "allOf": [
                {
                    "$ref": "#/definitions/hash-output"
                },
                {
                    "type": "object"
                }
            ]
        },
        "proof-common": {
            "title": "Proof Common",
            "description": "The properties that are shared amongst all versions of the Proof model.",
            "type": "object",
            "properties": {}
        },
        "proof-input": {
            "title": "Proof Input",
            "description": "The properties that are allowed when creating or updating a Proof.",
            "allOf": [
                {
                    "$ref": "#/definitions/proof-common"
                },
                {
                    "type": "object",
                    "properties": {}
                }
            ]
        },
        "proof-output": {
            "title": "Proof Output",
            "description": "The properties that are included when fetching a list of Proof.",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "merkleRoot": {
                            "type": "string"
                        },
                        "ethTransaction": {
                            "type": "string"
                        },
                        "unixTimestamp": {
                            "type": "integer"
                        },
                        "appId": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "id",
                        "merkleRoot",
                        "ethTransaction",
                        "unixTimestamp",
                        "appId"
                    ]
                },
                {
                    "$ref": "#/definitions/proof-common"
                }
            ]
        },
        "proof-output-detailed": {
            "title": "Proof Output Detailed",
            "description": "The properties that are included when fetching a single Proof.",
            "allOf": [
                {
                    "$ref": "#/definitions/proof-output"
                },
                {
                    "$ref": "#/definitions/hash-stub-output"
                }
            ]
        },
        "hash-stub-output": {
            "type": "object",
            "title": "Hash Stub Output",
            "description": "Hash stub consisting of ID and Hash value",
            "properties": {
                "hashes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "hash": {
                                "type": "string",
                                "pattern": "[A-Fa-f0-9]{64}"
                            }
                        },
                        "required": [
                            "id",
                            "hash"
                        ]
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "apps"
        },
        {
            "name": "objects"
        },
        {
            "name": "hashes"
        },
        {
            "name": "proofs"
        }
    ],
    "host": "sandbox.topaz.io",
    "security": [
        {
            "API Key": []
        }
    ]
}