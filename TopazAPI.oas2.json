{
    "swagger": "2.0",
    "info": {
        "title": "Topaz API",
        "version": "0.2.3",
        "contact": {
            "name": "Topaz",
            "url": "https://topaz.io",
            "email": "hello@topaz.io"
        },
        "description": "## Topaz API Spec\n\nTo get up and running with Topaz API as quickly as possible, read through these docs.\n\n### Prerequisites\n\nCreate an account at [https://topaz.io](https://topaz.io), log in, and generate an API Token.\n\nYou'll need an API Token to create a new app, create objects, create hashes, and view proofs.\n\nAll API requests should be prefixed with `/v1`, indicating that you're targeting version 1 of our API.\n\n### Guarantee\n\nTopaz API follows Semantic Versioning (https://semver.org), so expect that any breaking changes will be versioned under a new route prefix.\n\n## Getting Started\n\nThis short tutorial is the best way to learn how to use Topaz to create truth-first applications.\n\n### Create your first app\n\nApps are the way that Topaz organizes collections of critical data. You’re more than welcome to make many apps with a single account so you can keep you data organized.\n\nApps take two arguments, `name`, and `interval`.\n\n`interval` refers to the frequency, in seconds, at which your app’s data will be timestamped on a blockchain.\n\n**Free tier minimum interval is 60 seconds.*\n\n#### CREATE NEW APP\n\nWe’re going to make an app called `backup` with an `interval` of 60.\n\n```\n$ curl -X POST \\\n  http://localhost:8090/v1/apps \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8' \\\n  -H 'Content-Type: application/json' \\\n  -d '{ \n      \"name\": \"backup\", \n      \"interval\": 60 \n  }'\n```\n\n#### RESPONSE BODY\n\nIf your app was created successfully, the API response should look like this.\n\n```\n{\n  \"id\": \"195dfefa-190d-49df-bebe-0d4e24be242b\",\n  \"interval\": 60,\n  \"name\": \"backup\",\n  \"userId\": \"a0ec2f24-6529-410d-a9df-a6a5612b3e7b\"\n}\n```\n\n### Create a file to secure\n\nFor the sake of this tutorial, we are going to secure a document called `backup.txt` using Topaz. You can use any file you’d like.\n\n#### CREATE A NEW FILE\n\n```\n$ touch backup.txt\n$ echo \"bank account snapshot\" > backup.txt\n$ cat backup.txt\n> bank account snapshot\n```\n\n### Create an object for `backup.txt`\n\nObjects are the way Topaz records new things. An object could be a document, transaction, physical asset, or just an entry in a database. The important concept to understand is that an object refers to a specific, real thing.\n\nEvery piece of data you wish to secure using Topaz should start as an object.\n\n#### CREATE NEW OBJECT\n\nWe’re going to make an object to represent `backup.txt`.\n\n```\n$ curl -X POST \\\n  http://localhost:8090/v1/apps/{appId}/objects \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8'\n```\n\n#### RESPONSE BODY\n\nIf your object was created successfully, the API response should look like this.\n\n```\n{\n  \"id\": \"dd4177b2-310c-4b24-affc-5ff9cd20ae65\",\n  \"appId\": \"195dfefa-190d-49df-bebe-0d4e24be242b\"\n}\n```\n\n### Create a hash for the `backup.txt` object\n\nHashes are the recorded state of an object at a specific point in time. The hash literally is the SHA-256 hash of an object.\n\nTopaz uses the Multihash format, which means that you may choose to use a different hashing algorithm if you choose, and Topaz will be compatible.\n\nLearn more about Multihash here. To start using Multihash to create hashes yourself, first make sure [Golang is installed on your machine](https://golang.org/doc/install).\n\n#### INSTALL THE MULTIHASH TOOL\n\nWe're using the Golang package manager to install `multihash`.\n\n```\n$ go get github.com/multiformats/go-multihash/multihash\n```\n\n#### CREATE NEW SHA-256 HASH\n\nLet’s do a SHA-256 hash of `backup.txt`, and get its Base58 representation. `multihash` defaults to the SHA-256 algorithm, and Base58 encoding. Learn about more options with `multihash --help`.\n\n```\n$ cat backup.txt | multihash\n> QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\n```\n\n#### CREATE HASH IN TOPAZ\n\nNext, let’s create a corresponding hash in Topaz.\n\n```\n$ curl -X POST \\\n  http://localhost:8090/v1/apps/{appId}/objects/{objectId}/hashes \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8' \\\n  -H 'Content-Type: application/json' \\\n  -d '{ \n      \"hash\": \"QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\"\n  }'\n```\n\n#### RESPONSE BODY\n\nIf your hash was created successfully, the API response should look like this\n\n```\n{\n  \"id\": \"90b228e4-8578-4511-9b7f-5709dd1d8ce5\",\n  \"unixTimestamp\": 1551886825,\n  \"objectId\": \"dd4177b2-310c-4b24-affc-5ff9cd20ae65\",\n  \"proofId\": null,\n  \"hash\": \"QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\"\n}\n```\n\n### Check that the hash has been added to the `backup.txt` object\n\nLet’s see how the hash and object are related. Go ahead and check out what our object looks like now.\n\n#### GET OBJECT\n\nThe API response should look like this\n\n```\n$ curl -X GET \\\n  http://localhost:8090/v1/apps/{appId}/objects/{objectId} \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8'\n```\n\n#### RESPONSE BODY\n\nAs you can see, the hash is now associated with the object, and is the first entry in the `hashes` history of the object we created.\n\n```\n{\n  \"id\": \"dd4177b2-310c-4b24-affc-5ff9cd20ae65\",\n  \"appId\": \"195dfefa-190d-49df-bebe-0d4e24be242b\",\n  \"hashes\": [\n    {\n      \"id\": \"90b228e4-8578-4511-9b7f-5709dd1d8ce5\",\n      \"hash\": \"QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\"\n    }\n  ]\n}\n```\n\n### Check that the hash has made it to the Ethereum network\n\nRemember when you declared an interval for your app earlier?\n\nTopaz uses intervals to secure data on blockchains while avoiding expensive transaction fees and scaling issues.\n\nEvery time an interval completes, we generate a cryptographic proof for all of the hashes that occurred during that interval and send it to a blockchain.\n\n#### GET HASH\n\nLet’s inspect the hash we uploaded.\n\n```\n$ curl -X GET \\\n  http://localhost:8090/v1/apps/{appId}/objects/{objectId}/hashes/{hashId} \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8'\n```\n\n#### RESPONSE BODY\n\nIf your `hash.proofId` is populated, the response should look something like this\n\n*If your `hash.proofId` is `null`, your app hasn’t completed an interval cycle yet.\n\n```\n{\n  \"id\": \"90b228e4-8578-4511-9b7f-5709dd1d8ce5\",\n  \"unixTimestamp\": 1551886825,\n  \"objectId\": \"dd4177b2-310c-4b24-affc-5ff9cd20ae65\",\n  \"proofId\": \"64c91b09-7941-4924-b8e8-b7599f790d08\",\n  \"hash\": \"QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\"\n}\n```\n\n### Retrieve the proof information for a hash\n\nNow that the hash has been timestamped on a blockchain, we can retrieve information about it at any time for data verification purposes.\n\n#### GET PROOF\n\nFirst, get the proof for the hash\n\n```\n$ curl -X GET \\\n  http://localhost:8090/v1/apps/{appId}/proofs/{proofId} \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8'\n```\n\n#### RESPONSE BODY\n\nThe `blockchainTransactions` array contains information that is used to define the moment in time at which your hash was stored on a blockchain. Check out one of the linked explorers to verify that the hex-encoded hash on the blockchain matches the Base58 encoded hash from the proof.\n\n*While Topaz is a blockchain-agnostic platform, our free tier runs on the Ethereum Görli testnet.\n\n```\n{\n  \"id\": \"64c91b09-7941-4924-b8e8-b7599f790d08\",\n  \"unixTimestamp\": 1551886855,\n  \"appId\": \"195dfefa-190d-49df-bebe-0d4e24be242b\",\n  \"hashes\": [\n    {\n      \"id\": \"90b228e4-8578-4511-9b7f-5709dd1d8ce5\",\n      \"hash\": \"QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\"\n    }\n  ],\n  \"blockchainTransactions\": [\n    {\n      \"blockchainNetwork\": \"ethereum goerli\",\n      \"transactionHash\": \"0x8cfdf5172198034db70fc326e23b92dae9c23f4c3a542ecbbe5391f67dd277ba\",\n      \"explorers\": [\n        \"https://goerli.etherscan.io/tx/0x8cfdf5172198034db70fc326e23b92dae9c23f4c3a542ecbbe5391f67dd277ba\",\n        \"https://blockscout.com/eth/goerli/tx/0x8cfdf5172198034db70fc326e23b92dae9c23f4c3a542ecbbe5391f67dd277ba/internal_transactions\"\n      ]\n    }\n  ],\n  \"merkleRoot\": \"0x1220635f3f90f43599e7c461928729357b932ebf3c5cce29b1e59737debc698b6993\",\n}\n```\n\n### Verify data against the hash\n\nNow that the hash is secured, we can cross reference it with `backup.txt`.\n\n#### VERIFY SHA-256 HASH\n\nAs long as the file hash remains identical to the hash of its corresponding object, we can verify the data has not been corrupted since the time the proof was created.\n\n```\n$ cat backup.txt | multihash\n> QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\n```\n\n### Alter your data\n\nLet’s go ahead and edit our file, and see what the new hash is.\n\nAs you can see, the hash no longer matches the hash first added to the `backup.txt` object.\n\nOf course, in real life, almost no data is static. Amendments and changes happen all the time, so we enable amending data in a secure way by recording it.\n\n#### EDIT FILE\n\nSince we’re making a change, we’re going to amend the object with our new file hash.\n\n```\n$ echo \"bank account snapshot, next month\" > backup.txt\n$ cat backup.txt | multihash\n> QmY8bvrcK86jEXKPZ27RKMs5qE2U3yASx8TTUL54X4M6uG\n```\n\n#### NEW HASH\n\n```\n$ curl -X POST \\\n  http://localhost:8090/v1/apps/{appId}/objects/{objectId}/hashes \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8' \\\n  -H 'Content-Type: application/json' \\\n  -d '{ \n      \"hash\": \"QmY8bvrcK86jEXKPZ27RKMs5qE2U3yASx8TTUL54X4M6uG\"\n  }'\n```\n\n#### RESPONSE BODY\n\nIf your hash was created successfully, the response should look something like this.\n\n*In your own programs, you'd probably want to keep a copy of your original file, instead of amending it directly, so you can track and verify its changes over time.\n\n```\n{\n  \"id\": \"6628dea3-5675-4f50-9b6c-afa82947da97\",\n  \"unixTimestamp\": 1551886935,\n  \"objectId\": \"dd4177b2-310c-4b24-affc-5ff9cd20ae65\",\n  \"proofId\": null,\n  \"hash\": \"QmY8bvrcK86jEXKPZ27RKMs5qE2U3yASx8TTUL54X4M6uG\"\n}\n```\n\n### Verify data against the hash\n\n#### FILE HASH\n\nHere’s the new hash of `backup.txt` again.\n\n```\n$ cat backup.txt | multihash\n> QmY8bvrcK86jEXKPZ27RKMs5qE2U3yASx8TTUL54X4M6uG\n```\n\n#### GET OBJECT\n\nAnd here's the amended object\n\n```\n$ curl -X GET \\\n  http://localhost:8090/v1/apps/{appId}/objects/{objectId} \\\n  -H 'Authorization: Bearer 2FRv2pWdXSCqjuo4mNnNkKLJXpxuLsGfCUc6TbS9RNj8' \\\n```\n\n#### RESPONSE BODY\n\nHooray! As you can see, the file hash of `backup.txt` is now identical to the object's last hash. This process can be used to verify the integrity of `backup.txt` to the timestamp of the latest hash.\n\n```\n{\n  \"id\": \"dd4177b2-310c-4b24-affc-5ff9cd20ae65\",\n  \"appId\": \"195dfefa-190d-49df-bebe-0d4e24be242b\",\n  \"hashes\": [\n    {\n      \"id\": \"90b228e4-8578-4511-9b7f-5709dd1d8ce5\",\n      \"hash\": \"QmbBGyMmBtKFTTSbewEkNrr73rEKLdHetsaM8JmEHAuDac\"\n    },\n    {\n      \"id\": \"6628dea3-5675-4f50-9b6c-afa82947da97\",\n      \"hash\": \"QmY8bvrcK86jEXKPZ27RKMs5qE2U3yASx8TTUL54X4M6uG\"\n    }\n  ]\n}\n```\n\n### Conclusion\n\n* Created a new app\n* Created a file to secure\n* Created an object to represent the file\n* Created an initial hash for the object\n* Verified our data\n* Amended the file\n* Amended the object that represents the file, with a new hash\n* Verified our amended data\n\nThis workflow can be used to secure data in any app or business process. By integrating Topaz directly with software, we can create verifiable proofs of data over time and allow authorized users to amend them. This allows data to be secured by a blockchain without the complex technical requirements or cost of directly sending data to a blockchain.\n\nWe hope you enjoyed experimenting with Topaz!"
    },
    "paths": {
        "/apps": {
            "get": {
                "summary": "List Apps",
                "operationId": "findApps",
                "responses": {
                    "200": {
                        "description": "An array of all `app` objects belonging to the user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "93e8d456-c195-de31-0ad0-41d704c2ccd7",
                                    "userId": "32eb8a3d-ba12-6cca-07be-a3fb92073355",
                                    "name": "dolo",
                                    "interval": 90949208
                                },
                                {
                                    "id": "9ac5380d-0b49-51a0-1995-aabb5f9d8579",
                                    "userId": "17004a87-86e3-5d55-69f9-689657f96e75",
                                    "name": "anim eu sint incididunt",
                                    "interval": 68254023
                                },
                                {
                                    "id": "6170397f-2951-63b6-5881-3f70ef651312",
                                    "userId": "4ef1bd48-9901-1bb9-08a2-9fdd0d5c5fbd",
                                    "name": "sunt ",
                                    "interval": 2159934
                                },
                                {
                                    "id": "90bf35ac-7862-bee5-4910-0f41bcbf2725",
                                    "userId": "c7bed21-6edf-1dc9-d0e5-54d948981c72",
                                    "name": "vel",
                                    "interval": 44006348
                                },
                                {
                                    "id": "6d92edb3-da70-9a40-b30e-821df74f9d1e",
                                    "userId": "74b42123-7e8a-a933-f3f4-e2841a9b9354",
                                    "name": "non",
                                    "interval": 26495669
                                }
                            ]
                        }
                    }
                },
                "description": "List all `apps` belonging to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ]
            },
            "post": {
                "summary": "Create App",
                "operationId": "createApp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/app-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "name": "ex eu enim ipsum",
                                "interval": 9328408
                            }
                        },
                        "description": "Send in `name` and `interval` to generate an `app` with a blockchain transaction resolution no less than the defined `interval` in seconds."
                    }
                ],
                "responses": {
                    "201": {
                        "schema": {
                            "$ref": "#/definitions/app-output-detailed"
                        },
                        "description": "Returns the full `app` object, including `UUID` generated `id`, and the `userId` associated with this `app`.",
                        "examples": {
                            "application/json": {
                                "id": "6ba55b0c-aaa1-91ae-9c9e-fea0b9c220ff",
                                "userId": "9a27cf48-c09d-01af-eb7c-34f9444c69d3",
                                "name": "Excepteu",
                                "interval": 9328408
                            }
                        }
                    }
                },
                "description": "To create a new `app`, post to the `/apps` endpoint. You'll need to name the `app`, and pass in an `interval`, in seconds. This interval represents the amount of time between blockchain transactions that will occur as you're adding `hashes` to `objects` in this `app`.\n\nIn effect, it's the \"resolution\" at which you're comfortable proving that your data exists.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ]
            }
        },
        "/apps/{appId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get App",
                "operationId": "getApp",
                "responses": {
                    "200": {
                        "description": "Returns details about a single `app`.",
                        "schema": {
                            "$ref": "#/definitions/app-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "id": "09192c37-0b5a-0081-2ef9-1acafb8d6735",
                                "userId": "85e67f55-41ef-8bf9-e73d-2eecc84bdcaf",
                                "name": "ad et consectetur quis mollit",
                                "interval": 47376422
                            }
                        }
                    }
                },
                "description": "This endpoint will return details about a single `app`, given the `appId` passed in as the request parameter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apps"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "appId",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "/apps/{appId}/objects": {
            "get": {
                "summary": "List Objects",
                "operationId": "findObjects",
                "responses": {
                    "200": {
                        "description": "Returns an array of `objects`.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/object-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "appId": "19b730e0-0d8e-6f90-f588-c75cee1a87ef",
                                    "id": "cff2da16-0bd4-aa3b-4a87-dcfdf32dd233"
                                },
                                {
                                    "appId": "19b730e0-0d8e-6f90-f588-c75cee1a87ef",
                                    "id": "07b1ce3f-cfaf-692c-02e3-6d955efb26c3"
                                }
                            ]
                        }
                    }
                },
                "description": "This endpoint will return all `objects` registered for an `app`.",
                "parameters": [],
                "tags": [
                    "objects"
                ],
                "produces": [
                    "application/json"
                ]
            },
            "post": {
                "summary": "Create Object",
                "operationId": "createObject",
                "responses": {
                    "201": {
                        "description": "The response includes a new `id` for the `object`, along with the `appId` that it belongs to.",
                        "schema": {
                            "$ref": "#/definitions/object-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "appId": "46038ab0-c0d5-8030-4fcd-60e205f4c95f",
                                "id": "9bf2bc66-6e48-98f8-3051-b26855c45ca2"
                            }
                        }
                    }
                },
                "description": "Creating a new `object` doesn't take any body data in its request.",
                "tags": [
                    "objects"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            },
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/apps/{appId}/objects/{objectId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "objectId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Object",
                "operationId": "getObject",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/object-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "appId": "1cab655b-a515-36d9-1cae-d123001c0f4b",
                                "id": "5ac153a3-4e44-2952-e7a8-6ab7434283af",
                                "hashes": [
                                    {
                                        "id": "350e995-f7a6-384d-293b-53fad81c3d28",
                                        "hash": "QmaGMCsGjAEyLmqAbRkP2vhvv9tASdLgww9scrWo82ZJhe"
                                    },
                                    {
                                        "id": "147e6e96-c8ea-22f5-1db5-666140129830",
                                        "hash": "8tUmWPcU5LA1ruUiu7KbWTNdbxV8VCyxPtpvcdixTNbkw4EW7d89aMJE2kGq3H1JBf4LTtjZhrNxS7LXE7wCzRfhZo"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tags": [
                    "objects"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return details about a single object, given the `objectId` passed in as the request parameter"
            }
        },
        "/apps/{appId}/objects/{objectId}/hashes": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "objectId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "List Hashes",
                "operationId": "findHashes",
                "responses": {
                    "200": {
                        "description": "Returns an array of `hash` objects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/hash-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "164ba85d-024e-47d0-33a8-176c3ad5f6b3",
                                    "objectId": "3b219075-8365-bc98-33d0-d1f128cc6e75",
                                    "unixTimestamp": 91575573,
                                    "proofId": "47cfc8de-77cd-deaf-8db7-1ecabc6863c6",
                                    "hash": "8tYpC8u53XBNMJ8544s5KZixH7BAsu5ZxBdgQ6thWw5bc2ADpfjBFn7g92Q9enUMQ4zVhHvjeLqeTp81vTmo2M4ZGp"
                                },
                                {
                                    "id": "cbbe39e8-f009-5fa2-4845-210dc846f415",
                                    "objectId": "3b219075-8365-bc98-33d0-d1f128cc6e75",
                                    "unixTimestamp": 76947557,
                                    "proofId": "5fb7d70b-934f-0197-a80d-f78795278320",
                                    "hash": "QmddB8YCzmSGMTocvj9v32xfqEtBdzRrRrWwLuHCBjT4od"
                                },
                                {
                                    "id": "1bd39f9d-c1f1-e65f-0103-6be9a74b6c2a",
                                    "objectId": "3b219075-8365-bc98-33d0-d1f128cc6e75",
                                    "unixTimestamp": 81325725,
                                    "proofId": "3be55d00-0c6a-7fa8-3f31-aecf631b3f00",
                                    "hash": "Qmav1RrpUjkSpmd16SKfjCPKyWHnhvYMs3YBokFFAfS7qm"
                                }
                            ]
                        }
                    }
                },
                "tags": [
                    "hashes"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return all `hashes`, in Multihash format, which have been associated with an `object`"
            },
            "post": {
                "summary": "Create Hash",
                "operationId": "createHash",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/hash-input"
                        },
                        "x-examples": {
                            "application/json": {
                                "hash": "QmNYBynD1MRbsvsjYWeCzUsY4CKAFuZUH5BqDHbV7s7QdP"
                            }
                        },
                        "description": "Pass in a single `hash` string, in Base58 encoded Multihash format, to create a hash"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notice how the `proofId` is null. It will become populated during the next time that this app's `interval` ticks over, and a blockchain transaction is created.",
                        "schema": {
                            "$ref": "#/definitions/hash-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "id": "bb994339-e393-d33d-aab9-af3c427d15ee",
                                "objectId": "f291dba1-6705-66de-77d7-f9b7dd48b7fa",
                                "unixTimestamp": 30158611,
                                "proofId": null,
                                "hash": "QmaozNR7DZHQK1ZcU9p7QdrshMvXqWK6gpu5rmrkPdT3L4"
                            }
                        }
                    }
                },
                "tags": [
                    "hashes"
                ],
                "description": "This endpoint inputs a json object in it's body which defines a `hash` property. This `hash` should be a Base58 encoded hash in Multihash format.\n\nPlease see https://github.com/multiformats/multihash for more information regarding the Multihash format. To generate Multihashes, first make sure Golang is installed and configured on your machine (https://golang.org/doc/install), then:\n\n```\n$ go get github.com/multiformats/go-multihash/multihash\n$ echo -n \"hello world\" | multihash -a sha2-256\nQmaozNR7DZHQK1ZcU9p7QdrshMvXqWK6gpu5rmrkPdT3L4\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/apps/{appId}/objects/{objectId}/hashes/{hashId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "objectId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "hashId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Hash",
                "operationId": "getHash",
                "responses": {
                    "200": {
                        "description": "See how the `proofId` is now populated. This means that a proof has been created and stamped into the blockchain. Congratulations, your data is now provable for all of eternity!",
                        "schema": {
                            "$ref": "#/definitions/hash-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "id": "11d7c71c-10ba-d867-ba9f-da257cf2d5b8",
                                "objectId": "48f2774d-4ce5-976c-c88f-b444999b7368",
                                "unixTimestamp": 1550610197,
                                "proofId": "a02350b3-46c5-25ad-7640-8d1540a9f6bd",
                                "hash": "QmfK3n3jknJhRRXJNJdK2sJ2fpXarHXsXt1tuNYe12oDvW"
                            }
                        }
                    }
                },
                "tags": [
                    "hashes"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return details about a single hash, given the `hashId` passed in as the request parameter"
            }
        },
        "/apps/{appId}/proofs": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "List Proofs",
                "operationId": "findProofs",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/proof-output"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": "02a0719f-e09b-f87f-0c28-22d86449e5c6",
                                    "unixTimestamp": 99848909,
                                    "appId": "a38c6577-4639-faa7-d62d-ec64281ace3e",
                                    "merkleRoot": "Ox1220635f3f90f43599e7c461928729357b932ebf3c5cce29b1e59737debc698b6993"
                                },
                                {
                                    "id": "a40461b7-e89a-65f0-df72-0a913646fff7",
                                    "unixTimestamp": 35635572,
                                    "appId": "a38c6577-4639-faa7-d62d-ec64281ace3e",
                                    "merkleRoot": "Ox12207d43b25c274f29b6aec8f2eb8d5645c12f3c3cdb0d12d598e18e22648db2023f"
                                }
                            ]
                        }
                    }
                },
                "description": "This endpoint will return all `proofs` associated with an `app`.",
                "tags": [
                    "proofs"
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/apps/{appId}/proofs/{proofId}": {
            "parameters": [
                {
                    "name": "appId",
                    "in": "path",
                    "type": "string",
                    "required": true
                },
                {
                    "name": "proofId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get Proof",
                "operationId": "getProof",
                "responses": {
                    "200": {
                        "description": "A proof has a Base58 encoded `merkleRoot`, a list of `hashes`, and an array of `blockchainTransactions`. These pieces of data allow you to confirm that your data is secured in the blockchain.\n\nWe combine all hashes sent to Topaz for a given app during an `interval` timeframe, create a Merkel Tree out of those hashes, compute the root hash (`merkleRoot`), craft one or more blockchain transactions using that `merkleRoot` as input data, and broadcast that transaction to be mined into a block, solidifying it's existence into an untamperable data structure.\n\n",
                        "schema": {
                            "$ref": "#/definitions/proof-output-detailed"
                        },
                        "examples": {
                            "application/json": {
                                "id": "fc13687b-2603-fe2b-3ca8-93aa4881cb7c",
                                "unixTimestamp": 1551724423,
                                "appId": "fa7e09db-4c9c-4902-ccd9-4bc906c4bdef",
                                "hashes": {
                                    "id": "2136a5a8-db34-1efb-5b02-be65fb1fbb84",
                                    "hash": "QmSahRgkxLfRs25i1Arjv2Zx1LWME99GedsFbdUVF5FJ3A"
                                },
                                "blockchainTransactions": [
                                    {
                                        "blockchainNetwork": "ethereum goerli",
                                        "transactionHash": "0xe3cad0f60e731ce504e2a8efa8f09a2945bff60e1293e4d9b13302d3ce8c9355",
                                        "explorers": [
                                            "https://goerli.etherscan.io/tx/0xe3cad0f60e731ce504e2a8efa8f09a2945bff60e1293e4d9b13302d3ce8c9355",
                                            "https://blockscout.com/eth/goerli/tx/0xe3cad0f60e731ce504e2a8efa8f09a2945bff60e1293e4d9b13302d3ce8c9355/internal_transactions"
                                        ]
                                    }
                                ],
                                "merkleRoot": "Ox1220635f3f90f43599e7c461928729357b932ebf3c5cce29b1e59737debc698b6993"
                            }
                        }
                    }
                },
                "tags": [
                    "proofs"
                ],
                "produces": [
                    "application/json"
                ],
                "description": "This endpoint will return details about a single proof, given the `proofId` passed in as the request parameter."
            }
        }
    },
    "schemes": [
        "https"
    ],
    "basePath": "/v1",
    "securityDefinitions": {
        "API Key": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization",
            "description": "Topaz API uses a standard Bearer Token Authorization header for authorization. The header's `key` must be the word `Authorization`, and the `value` may start with `Bearer ` (case insentivie, mind the space, followed by the actual token), but that `Bearer` prefix is not required."
        }
    },
    "definitions": {
        "app-common": {
            "title": "App Common",
            "description": "The properties that are shared amongst all versions of the App model.",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer",
                    "minimum": 30
                }
            },
            "required": [
                "name",
                "interval"
            ]
        },
        "app-input": {
            "title": "App Input",
            "description": "The properties that are allowed when creating or updating an App.",
            "allOf": [
                {
                    "$ref": "#/definitions/app-common"
                },
                {
                    "type": "object"
                }
            ]
        },
        "app-output": {
            "title": "App Output",
            "description": "The properties that are included when fetching a list of Apps.",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "userId": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "id",
                        "userId"
                    ]
                },
                {
                    "$ref": "#/definitions/app-common"
                }
            ]
        },
        "app-output-detailed": {
            "title": "App Output Detailed",
            "description": "The properties that are included when fetching a single Object.",
            "allOf": [
                {
                    "$ref": "#/definitions/app-output"
                }
            ]
        },
        "object-common": {
            "title": "Object Common",
            "description": "The properties that are shared amongst all versions of the Object model.",
            "type": "object",
            "properties": {}
        },
        "object-input": {
            "title": "Object Input",
            "description": "The properties that are allowed when creating or updating a Object.",
            "allOf": [
                {
                    "$ref": "#/definitions/object-common"
                },
                {
                    "type": "object",
                    "properties": {}
                }
            ]
        },
        "object-output": {
            "title": "Object Output",
            "description": "The properties that are included when fetching a list of Objects.",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "appId": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "appId",
                        "id"
                    ]
                },
                {
                    "$ref": "#/definitions/object-common"
                }
            ]
        },
        "object-output-detailed": {
            "title": "Object Output Detailed",
            "description": "The properties that are included when fetching a single Object.",
            "allOf": [
                {
                    "$ref": "#/definitions/object-output"
                },
                {
                    "$ref": "#/definitions/hash-stub-output"
                }
            ]
        },
        "hash-common": {
            "title": "Hash Common",
            "description": "The properties that are shared amongst all versions of the Hash model.",
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                }
            },
            "required": [
                "hash"
            ]
        },
        "hash-input": {
            "title": "Hash Input",
            "description": "The properties that are allowed when creating or updating a Hash.",
            "allOf": [
                {
                    "$ref": "#/definitions/hash-common"
                },
                {
                    "type": "object"
                }
            ]
        },
        "hash-output": {
            "title": "Hash Output",
            "description": "The properties that are included when fetching a list of Hashes.",
            "allOf": [
                {
                    "$ref": "#/definitions/hash-common"
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "unixTimestamp": {
                            "type": "integer"
                        },
                        "objectId": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "proofId": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "required": [
                        "id",
                        "unixTimestamp",
                        "objectId"
                    ]
                }
            ]
        },
        "hash-output-detailed": {
            "title": "Hash Output Detailed",
            "description": "The properties that are included when fetching a single Hash.",
            "allOf": [
                {
                    "$ref": "#/definitions/hash-output"
                },
                {
                    "type": "object"
                }
            ]
        },
        "proof-common": {
            "title": "Proof Common",
            "description": "The properties that are shared amongst all versions of the Proof model.",
            "type": "object",
            "properties": {}
        },
        "proof-input": {
            "title": "Proof Input",
            "description": "The properties that are allowed when creating or updating a Proof.",
            "allOf": [
                {
                    "$ref": "#/definitions/proof-common"
                },
                {
                    "type": "object",
                    "properties": {}
                }
            ]
        },
        "proof-output": {
            "title": "Proof Output",
            "description": "The properties that are included when fetching a list of Proof.",
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "merkleRoot": {
                            "type": "string"
                        },
                        "unixTimestamp": {
                            "type": "integer"
                        },
                        "appId": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "blockchainTransactions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/blockchain-transaction"
                            }
                        }
                    },
                    "required": [
                        "id",
                        "merkleRoot",
                        "unixTimestamp",
                        "appId",
                        "blockchainTransactions"
                    ]
                },
                {
                    "$ref": "#/definitions/proof-common"
                }
            ]
        },
        "proof-output-detailed": {
            "title": "Proof Output Detailed",
            "description": "The properties that are included when fetching a single Proof.",
            "allOf": [
                {
                    "$ref": "#/definitions/proof-output"
                },
                {
                    "$ref": "#/definitions/hash-stub-output"
                }
            ]
        },
        "hash-stub-output": {
            "type": "object",
            "title": "Hash Stub Output",
            "description": "Hash stub consisting of ID and Hash value",
            "properties": {
                "hashes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "hash": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "hash"
                        ]
                    }
                }
            }
        },
        "blockchain-transaction": {
            "type": "object",
            "title": "Blockchain Transaction",
            "description": "Signifies a single blockchain transaction. Contains network name, transaction hash, and a list of explorers pointing to that transaction",
            "properties": {
                "blockchainNetwork": {
                    "type": "string"
                },
                "transactionHash": {
                    "type": "string"
                },
                "explorers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "blockchainNetwork",
                "transactionHash"
            ]
        }
    },
    "tags": [
        {
            "name": "apps"
        },
        {
            "name": "objects"
        },
        {
            "name": "hashes"
        },
        {
            "name": "proofs"
        }
    ],
    "host": "api.topaz.io",
    "security": [
        {
            "API Key": []
        }
    ]
}